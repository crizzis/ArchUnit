ext.moduleName = 'com.tngtech.archunit.junit5'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

addApiJarTo this
apiJar {
    from project(':archunit-junit').sourceSets.api.output
}

configurations {
    engineApi
    compile.extendsFrom engineApi
    testCompile.extendsFrom engineApi
}

sourceSets {
    engineApi {
        java {
            srcDirs = ['src/engine-api/java']
        }
        compileClasspath = configurations.engineApi
    }
}

dependencies {
    api project(path: ':archunit-junit', configuration: 'api')
    api dependency.junitPlatformCommons
    engineApi dependency.junitPlatformEngine
    engineApi project(path: ':archunit', configuration: 'shadow')

    compile sourceSets.engineApi.output
    compile project(path: ':archunit', configuration: 'shadow')
    compile project(path: ':archunit-junit', configuration: 'shadow')
    compile dependency.guava
    compile dependency.slf4j
    compile dependency.junitPlatformEngine

    testCompile sourceSets.engineApi.output
    testCompile project(path: ':archunit', configuration: 'tests')
    testCompile dependency.assertj
    testCompile dependency.mockito
    testCompile dependency.junit5JupiterApi

    testRuntime dependency.junit5JupiterEngine
}

configureSlowTestsFor this

test {
    useJUnitPlatform() {
        excludeEngines 'junit-archunit'
    }
}

shadowJar {
    exclude 'META-INF/maven/**'

    dependencies {
        exclude(project(':archunit'))
        exclude(dependency { it.name != dependency.guava && !it.name.contains('archunit-junit') })
    }
}

this.with project(':archunit-junit').configureJUnitArchive
