ext.isReleaseVersion = !project.version.endsWith("-SNAPSHOT")

if (!hasProperty("sonatypeUsername")) {
    ext.sonatypeUsername = ""
}
if (!hasProperty("sonatypePassword")) {
    ext.sonatypePassword = ""
}

releaseProjects*.with {
    apply plugin: "maven-publish"
    apply plugin: "signing"

    tasks.withType(GenerateModuleMetadata) {
        enabled = isReleaseVersion // signing of these artifacts causes failure for snapshot versions
    }

    java {
        withJavadocJar()
        withSourcesJar()
    }

    // If I write @see ..., I don't want to fail my build because of a missing @param :-(
    if (JavaVersion.current().isJava8Compatible()) {
        allprojects {
            tasks.withType(Javadoc) {
                options.addStringOption('Xdoclint:none', '-quiet')
            }
        }
    }

    publish.dependsOn(build)
    publish.doFirst {
        assert !gradle.startParameter.isParallelProjectExecutionEnabled():
                'uploading archives with parallel execution seems to lead to broken uploads in Sonatype Nexus'
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = project.archivesBaseName
                from components.java
                pom {
                    name = app.name
                    packaging = "jar"
                    description = project.description
                    url = app.urls.entry

                    developers {
                        developer {
                            id = 'codecholeric'
                            name = 'Peter Gafert'
                            email = 'peter.gafert@tngtech.com'
                        }
                        developer {
                            id = 'rweisleder'
                            name = 'Roland Weisleder'
                            email = 'roland.weisleder@googlemail.com'
                        }
                        developer {
                            id = 'hankem'
                            name = 'Manfred Hanke'
                            email = 'manfred.hanke@tngtech.com'
                        }
                    }

                    organization {
                        name = company.name
                        url = company.url
                    }

                    scm {
                        url = app.urls.source
                        connection = "scm:${app.gitRepo}"
                        developerConnection = "scm:${app.gitRepo}"
                    }
                }
            }
        }

        repositories {
            // respective username and password can be configured in ~/.gradle/gradle.properties
            if (project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')) {
                maven {
                    def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                    def snapshotRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
                    url = isReleaseVersion ? releasesRepoUrl : snapshotRepoUrl

                    credentials {
                        username = sonatypeUsername
                        password = sonatypePassword
                    }

                    metadataSources {
                        gradleMetadata()
                    }
                }
            }
        }
    }

    signing {
        // requires gradle.properties, see http://www.gradle.org/docs/current/userguide/signing_plugin.html
        required {
            isReleaseVersion && gradle.taskGraph.hasTask('publish') && project.hasProperty('sonatypeUsername')
        }
        sign publishing.publications.mavenJava
    }
}
